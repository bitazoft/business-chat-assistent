generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  phone         String
  password      String
  role          UserRole       @default(customer)
  address       String?
  createdAt     DateTime       @default(now())
  sellerProfile SellerProfile?
  orders        orders[]
  products      products[]
}

model SellerProfile {
  id        Int     @id @default(autoincrement())
  userId    Int     @unique
  shopName  String
  gstNumber String?
  user      users   @relation(fields: [userId], references: [id])
}

model chat_logs {
  id         Int      @id @default(autoincrement())
  customerId String?  @db.VarChar
  user_query String   @db.VarChar
  intent     String?  @db.VarChar
  entities   String?  @db.VarChar
  response   String   @db.VarChar
  timestamp  DateTime @default(now()) @db.Timestamp(6)
  sellerId   Int
}

model orders {
  id           Int           @id @default(autoincrement())
  sellerId     Int
  status       String        @db.VarChar
  total_amount Float
  created_at   DateTime?     @default(now()) @db.Timestamp(6)
  customerId   String?       @db.VarChar
  order_items  order_items[]
  customers    customers?    @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_customers_fk")
  user         users         @relation(fields: [sellerId], references: [id], map: "orders_userId_fkey")
}

model order_items {
  id         Int      @id @default(autoincrement())
  order_id   Int
  product_id Int
  price      Float
  quantity   Int
  orders     orders   @relation(fields: [order_id], references: [id])
  products   products @relation(fields: [product_id], references: [id])
}

model products {
  id          Int           @id @default(autoincrement())
  sellerId    Int
  name        String        @db.VarChar
  description String?       @db.VarChar
  price       Float
  stock       Int
  order_items order_items[]
  user        users         @relation(fields: [sellerId], references: [id], map: "products_userId_fkey")
}

model customers {
  id         String    @id() @db.VarChar
  name       String    @db.VarChar
  address    String    @db.VarChar
  number1    String    @db.VarChar
  number2    String?   @db.VarChar
  created_at DateTime? @default(now()) @db.Timestamp(6)
  email      String?   @db.VarChar
  orders     orders[]
}

enum UserRole {
  customer
  seller
  admin
}
